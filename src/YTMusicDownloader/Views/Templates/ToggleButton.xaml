<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" xmlns:p="clr-namespace:YTMusicDownloader.Properties">

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonDeactivatedForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Content" Value="{x:Static p:Resources.Deactivated}" />
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Padding" Value="5,6"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonActivatedForegroundBrush}"/>
                <!--
                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                <Setter Property="BorderThickness" Value="2"/>
                -->
                <Setter Property="Content" Value="{x:Static p:Resources.Activated}" />
                
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <!-- <Setter Property="Content" Value="{x:Static p:Resources.Activate}" /> -->
                <Setter Property="Foreground" Value="White"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <!-- <Setter Property="Content" Value="{x:Static p:Resources.Deactivate}" /> -->
                <Setter Property="Foreground" Value="Gray"/>
            </MultiTrigger>
            <!--
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}"/>
            </Trigger>
            -->
            <!--
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
            -->
        </Style.Triggers>
    </Style>

</ResourceDictionary>